// <auto-generated />
using EDFab_Telemetry_Server;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EDFab_Telemetry_Server.Migrations
{
    [DbContext(typeof(SqliteDb))]
    partial class SqliteDbModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("EDFab_Telemetry_Server.SensorInfo", b =>
                {
                    b.Property<string>("SID")
                        .HasColumnType("TEXT");

                    b.Property<string>("IP")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("SID");

                    b.ToTable("SensorInfo");
                });

            modelBuilder.Entity("EDFab_Telemetry_Server.SensorValues", b =>
                {
                    b.Property<string>("SIDKey")
                        .HasColumnType("TEXT");

                    b.Property<string>("DateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("SIDKey");

                    b.ToTable("sensorValues");
                });

            modelBuilder.Entity("EDFab_Telemetry_Server.UserInfo", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Hash")
                        .HasColumnType("TEXT");

                    b.Property<string>("Priv")
                        .HasColumnType("TEXT");

                    b.Property<string>("Token")
                        .HasColumnType("TEXT");

                    b.HasKey("Email");

                    b.ToTable("UserInfo");
                });

            modelBuilder.Entity("EDFab_Telemetry_Server.UserPerms", b =>
                {
                    b.Property<string>("EmailKey")
                        .HasColumnType("TEXT");

                    b.Property<string>("SID")
                        .HasColumnType("TEXT");

                    b.HasKey("EmailKey");

                    b.ToTable("userPerms");
                });

            modelBuilder.Entity("EDFab_Telemetry_Server.SensorValues", b =>
                {
                    b.HasOne("EDFab_Telemetry_Server.SensorInfo", null)
                        .WithMany("Values")
                        .HasForeignKey("SIDKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EDFab_Telemetry_Server.UserPerms", b =>
                {
                    b.HasOne("EDFab_Telemetry_Server.UserInfo", null)
                        .WithMany("Perms")
                        .HasForeignKey("EmailKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EDFab_Telemetry_Server.SensorInfo", b =>
                {
                    b.Navigation("Values");
                });

            modelBuilder.Entity("EDFab_Telemetry_Server.UserInfo", b =>
                {
                    b.Navigation("Perms");
                });
#pragma warning restore 612, 618
        }
    }
}
